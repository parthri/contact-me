PRACTICAL - 7

Aim : Styling application by applying responsive and adaptive design concepts

CODE :-
MAIN.DART
import 'package:flutter/material.dart';
import 'home.dart';
void main()
{
runApp(const MyApp());
}
class MyApp extends StatelessWidget {
const MyApp
({super.key});
@override
Widget build(BuildContext context) {
return MaterialApp(
debugShowCheckedModeBanner: false,
title: 'Flutter Demo',
theme: ThemeData(
primarySwatch: Colors.brown,
),
home: HomePage(),
);
}
}
HOME.DART
import 'package:flutter/material.dart';
import 'package:pr7/responsive_helper.dart';// TODO Implement this library.
class HomePage extends StatefulWidget{
@override
_HomePageState createState()=>_HomePageState();
}
class _HomePageState extends State<HomePage> {
@override
Widget build(BuildContext context){
return Scaffold(
appBar: AppBar(
title: Text('Responsive'),
),
body: SafeArea(
child:CustomeResponsiveWidget(
mobile:Column(
children: [
buildBannerSlider(),
buildIntroText(context),
],
),
tab:Row(
children: [
buildBannerSlider(),
Expanded(child:buildIntroText(context)),
],
),desktop:Container(
height: 180,
width: MediaQuery.of(context).size.width,
child: Row(
crossAxisAlignment:CrossAxisAlignment.start,
children: [
buildBannerSlider(),
Expanded(child:buildIntroText(context)),
],
),
),
),
),
);
}
Widget buildIntroText(BuildContext context){
return Container(
child: Text(
'Hello
Parth Brahmbhatt
Pactical - 7',
style: TextStyle(fontSize: 28),
),
);
}
Container buildBannerSlider(){
return Container(
width: 320,
height: 180,
decoration: BoxDecoration(
gradient: LinearGradient(colors: [Colors.cyanAccent,Colors.lightGreenAccent]),
borderRadius: BorderRadius.circular(12)
),
);
}
}
RESPONSIVE.DART
import 'package:flutter/material.dart';
class CustomeResponsiveWidget extends StatelessWidget {
final Widget mobile;
final Widget tab;
final Widget desktop;
const CustomeResponsiveWidget({super.key,required this.mobile,required this.tab,required
this.desktop});
@override
Widget build(BuildContext context){
return LayoutBuilder(builder: (context,constraints){
if(constraints.maxWidth<768){
return mobile;
}else{
return tab;
}
});
}
}




PRACTICAL - 9

Aim : Introduction to navigation, navigation drawer and create multi- screen application.

CODE :-
import 'package:flutter/material.dart';
void main() {
runApp(const MaterialApp(
debugShowCheckedModeBanner: false,
title: 'navigation basics',
home: FirstRoute(),
));
}
class FirstRoute extends StatelessWidget {
const FirstRoute({Key? key}): super(key: key);
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(
title: const Text('Telegram'),
backgroundColor: Colors.cyanAccent[600],
),
body: Center(
child: ElevatedButton(
child: const Text('New Group'),
onPressed: () {
Navigator.push(context,
MaterialPageRoute(builder: (context) => const SecondRoute()),
);
},
),
),
drawer: Drawer(
child: ListView(
padding: EdgeInsets.zero,
children: [
const DrawerHeader(
decoration: BoxDecoration(
color: Colors.lightBlueAccent,
),
child: Text(''),
),
ListTile(
title: const Text('New Group'),
onTap: () {
Navigator.pop(context);
},
),
ListTile(
title: const Text('Contacts'),
onTap: () {
Navigator.pop(context);
},
),
ListTile(
title: const Text('Calls'),
onTap: () {
Navigator.pop(context);
},
),
ListTile(
title: const Text('People Nearby'),
onTap: () {
Navigator.pop(context);
},
),
ListTile(
title: const Text('Saved Messages'),
onTap: () {
Navigator.pop(context);
},
),
ListTile(
title: const Text('Settings'),
onTap: () {
Navigator.pop(context);
},
)
],
),
),
);
}
}
class SecondRoute extends StatelessWidget {
const SecondRoute({Key? key}): super(key: key);
@override
Widget build(BuildContext context)
{
return Scaffold(
appBar: AppBar(
title: const Text('Telegram'),
),
body: Center(
child: ElevatedButton(
onPressed: (){
Navigator.pop(context);
},
child: const Text('Go Back'),
),
),
);
}
}




PRACTICAL - 10

Aim : Introduction to tab views.

CODE :-
import 'package:flutter/material.dart';
void main() {
runApp( MyApp());
}
class MyApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
return MaterialApp(
debugShowCheckedModeBanner: false,
title: 'Tab View',
theme: ThemeData(
primarySwatch: Colors.deepOrange,
),
home: const MyHomePage(),
);
}
}
class MyHomePage extends StatelessWidget {
const MyHomePage({Key? key, }): super(key: key);
@override
Widget build(BuildContext context) {
return DefaultTabController(
length: 6,
child: Scaffold(
appBar: AppBar(
title: Text("Practical - 10"),
bottom: TabBar(
tabs: [
Tab(
icon: Icon(Icons.home_filled),
text: "home",
),
Tab(
icon: Icon(Icons.videogame_asset),
text: "games",
),
Tab(
icon: Icon(Icons.cake),
text: "cake",
),
Tab(
icon: Icon(Icons.account_box_outlined),
text: "Account",
),
Tab(
icon: Icon(Icons.add_a_photo),
text: "Add image",
)
],
),
),
));
}
}




PRACTICAL - 11

Aim : Create Recipe application [Category listing, Recipe list, Recipedetails]

CODE :- 
import 'package:flutter/material.dart';
void main() {
runApp(const MaterialApp(title:'Navigation Basics',home: Home(),
debugShowCheckedModeBanner: false,
));}
class Home extends StatelessWidget {
const Home({Key?key}):super(key:key);
@override
Widget build(BuildContext context)
{return Scaffold(
appBar:AppBar(centerTitle: true,
title: const Text('AnimeX'),
),
body: ListView(
children: <Widget>[
ListTile(leading: Icon(Icons.assistant_rounded),title: Text('Jujutsu Kaisen'),
onTap: (){Navigator.push(context,
MaterialPageRoute(builder: (context)=>const Juju()),
);
},
),
ListTile(leading: Icon(Icons.filter_vintage_outlined),
title: Text('Demon Slayer'),
onTap: (){Navigator.push(context, MaterialPageRoute(builder: (context) => Demon()),
);
},
),
ListTile(leading: Icon(Icons.donut_small_outlined),
title: Text('Tokyo Revengers'),
onTap: (){Navigator.push(context, MaterialPageRoute(builder: (context) => Tokyo()),
);
},
),
],
),
);
}
}
class Juju extends StatelessWidget{
const Juju({Key?key}):super(key:key);
@override
Widget build(BuildContext context){return Scaffold(
appBar: AppBar(
title: const Text('Jujutsu Kaisen Casts'),
),
body: ListView(
children: <Widget>[
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\gojo.jpg"),
),
title: Text('Saturo Gojo'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\yuji.jpg"),
),
title: Text('Yuji Itadori'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\fusi.jpg"),
),
title: Text('Fushiguro Megumi'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\yuta.jpg"),
),
title: Text('Yuta Okkotsu'),
),
],
),
);
}
}
class Demon extends StatelessWidget{
const Demon({Key?key}):super(key:key);
@override
Widget build(BuildContext context){return Scaffold(
appBar: AppBar(
title: const Text('Demon Slayer Casts'),
),
body: ListView(
children: <Widget>[
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\tanji.jpg"),
),
title: Text('Tanjiro Kamado'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\zeni.jpg"),
),
title: Text('Zenitsu Agatsuma'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\ino.jpg"),
),
title: Text('Inosuke Hashibira'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\nezu.jpg"),
),
title: Text('Nezuko Kamado'),
),
],
),
);
}
}
class Tokyo extends StatelessWidget{
const Tokyo({Key?key}):super(key:key);
@override
Widget build(BuildContext context){return Scaffold(
appBar: AppBar(
title: const Text('Tokyo Revengers Casts'),
),
body: ListView(
children: <Widget>[
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\miky.jpg"),
),
title: Text('Mikey'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\take.jpg"),
),
title: Text('Takemichi'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\draken.jpg"),
),
title: Text('Draken'),
),
ListTile(leading: CircleAvatar(
backgroundImage: AssetImage("C:\Users\ayush\OneDrive\Documents\hina.jpg"),
),
title: Text('Hinata Tachibana'),
),
],
),
);
}
}





PRACTICAL - 12

Aim : Introduction to Validating, Submitting form and HTTP requests.

CODE :- 
import 'package:flutter/material.dart';
void main() {
runApp(MaterialApp(
debugShowCheckedModeBanner: false,
home: FormValidationExample(),
));
}
class FormValidationExample extends StatelessWidget with InputValidationMixin {
final formGlobalKey = GlobalKey<FormState>();
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(
title: Text('Validatation form'),
),
body:
Padding(
padding: const EdgeInsets.symmetric(horizontal: 24),
child:Form(
key: formGlobalKey,
child: Column(
children: [
const SizedBox(height: 50),
TextFormField(
decoration: InputDecoration(
icon: Icon(Icons.account_circle_outlined),
labelText: "Firstname"
),
validator: (value) {
if (value == null || value.isEmpty) {
return 'Please enter some text';
}
return null;
},
),
const SizedBox(height: 24),
TextFormField(
decoration: InputDecoration(
icon: Icon(Icons.account_circle_outlined),
labelText: "Lastname"
),
validator: (value) {
if (value == null || value.isEmpty) {
return 'Please enter some text';
}
return null;
},
),
const SizedBox(height: 24),
TextFormField(
decoration: InputDecoration(
icon: Icon(Icons.email_outlined),
labelText: "Email"
),
validator: (email) {
// ignore: curly_braces_in_flow_control_structures
if (isEmailValid(email!)) {
return null;
} else {
return 'Enter a valid email address';
}
},
),
const SizedBox(height: 24),
TextFormField(
decoration: InputDecoration(
icon: Icon(Icons.enhanced_encryption_outlined),
labelText: "Password",
),
maxLength: 6,
obscureText: true,
validator: (password) {
if (isPasswordValid(password!)) return null;
else
return 'Enter a valid password';
},
),
const SizedBox(height: 24),
TextFormField(
decoration: InputDecoration(
icon: Icon(Icons.phone_rounded ),
labelText: "Phone number",
),
maxLength: 10,
validator: (value) {
if(value!.isEmpty){
return "Please Enter a Phone Number";
}else if(!RegExp(r'^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?:
*x(\d+))?\s*$').hasMatch(value)){
return "Please Enter a Valid Phone Number";
}
},
),
const SizedBox(height: 24),
ElevatedButton(
onPressed: () {
if (formGlobalKey.currentState!.validate()) {
formGlobalKey.currentState!.save();
// use the email provided here
}
},
child: Text("Submit"))
],
),
),
));
}
}
mixin InputValidationMixin {
bool isPasswordValid(String password) => password.length == 6;
bool isEmailValid(String email) {
String name =
r'^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-
9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$';
RegExp regex = new RegExp(name);
return regex.hasMatch(email);
}
bool isEmpty(String mob) {
String mo =
r'^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-
9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$';
RegExp regex = new RegExp(mo);
return regex.hasMatch(mob);
}
}




PRACTICAL - 15

Aim : Add animations to existing applications.

CODE :- 
import 'dart:math';
import 'package:flutter/material.dart';
void main() => runApp(const AnimatedContainerApp());
class AnimatedContainerApp extends StatefulWidget {
const AnimatedContainerApp({super.key});
@override
State<AnimatedContainerApp> createState() => _AnimatedContainerAppState();
}
class _AnimatedContainerAppState extends State<AnimatedContainerApp> {
double _width = 50;
double _height = 50;
Color _color = Colors.green;
BorderRadiusGeometry _borderRadius = BorderRadius.circular(8);
get buttonColor => null;
@override
Widget build(BuildContext context) {
return MaterialApp(
debugShowCheckedModeBanner: false,
home: Scaffold(
backgroundColor: Colors.white,
appBar: AppBar(
title: const Text('AnimateX'),
),
body: Center(
child: AnimatedContainer(
width: _width,
height: _height,
decoration: BoxDecoration(
color: _color,
borderRadius: _borderRadius,
),
duration: const Duration(seconds: 1),
curve: Curves.fastOutSlowIn,
),
),
floatingActionButton: FloatingActionButton(
onPressed: () {
setState(() {
final random = Random();
_width = random.nextInt(300).toDouble();
_height = random.nextInt(300).toDouble();
_color = Color.fromRGBO(
random.nextInt(256),
random.nextInt(256),
random.nextInt(256),
1,
);
_borderRadius =
BorderRadius.circular(random.nextInt(100).toDouble());
});
},
child: const Icon(
Icons.play_arrow,
color: Colors.white,
),
),
),
);
}
}
